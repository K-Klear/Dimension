go.property("face", hash(""))
go.property("open", false)

local open_time = 1

function init(self)
	local parents = {
		[hash("front")] = "/cube_1/front_inside",
		[hash("right")] = "/cube_1/right_inside",
		[hash("far")] = "/cube_1/far_inside",
		[hash("left")] = "/cube_1/left_inside",
		[hash("top")] = "/cube_1/top_inside",
		[hash("bottom")] = "/cube_1/bottom_inside"
	}
	local object_list = {".", "top", "bottom"}
	if not (self.face == hash("")) then
		for key, val in ipairs(object_list) do
			go.set_parent(val, parents[self.face], true)
		end
	end
	if self.open then
		msg.post("#co", hash("disable"))
		go.animate("top", "scale.y", go.PLAYBACK_ONCE_FORWARD, 0, go.EASING_LINEAR, 0)
		go.animate("bottom", "scale.y", go.PLAYBACK_ONCE_FORWARD, 0, go.EASING_LINEAR, 0)
	end
end

local function open(self)
	if not self.open then
		sound.play("/sound#leafy_door")
		self.open = true
		msg.post("#co", hash("disable"))
		go.animate("top", "scale.y", go.PLAYBACK_ONCE_FORWARD, 0, go.EASING_LINEAR, open_time)
		go.animate("bottom", "scale.y", go.PLAYBACK_ONCE_FORWARD, 0, go.EASING_LINEAR, open_time)
	end
end

local function close(self)
	if self.open then
		sound.play("/sound#leafy_door")
		self.open = false
		msg.post("#co", hash("enable"))
		go.animate("top", "scale.y", go.PLAYBACK_ONCE_FORWARD, 1, go.EASING_LINEAR, open_time)
		go.animate("bottom", "scale.y", go.PLAYBACK_ONCE_FORWARD, 1, go.EASING_LINEAR, open_time)
	end
end


function on_message(self, message_id, message, sender)
	if message_id == hash("pressed") then
		if self.open then
			close(self)
		else
			open(self)
		end
	end
end